%
%
% 
%       greedy forward model selection algorithm (generated by chatGPT)
%       adapted by R Somervail
%   
%
%%

function [bestModel, selectedPredictors, selectedIndices] = greedyForwardModelSelection(X, y, Z, G)

    thresh = 500;

    [nSamples, nPredictors] = size(X);
    remaining = 1:nPredictors;
    selected = [];
    currentBestScore = -Inf;

    selectedPredictors = [];
    selectedIndices = [];
    score_difs = [];

    while ~isempty(remaining)
        length(remaining)
        scores = zeros(1, length(remaining));
        models = cell(1, length(remaining));

        % Try adding each remaining predictor
        fprintf('%s',repmat('.',1,length(remaining)))
        fprintf('\n\n')
        parfor i = 1:length(remaining)
            tempIndices = [selected, remaining(i)];
            tempX = X(:, tempIndices); %#ok<PFBNS> 

            model = fitlmematrix( tempX, y, Z, G, ...
                'FitMethod','REML');

            models{i} = model;
            scores(i) = -model.ModelCriterion.BIC;

            fprintf('\b|\n');
        end
        fprintf('\n\n')

        % Find the best among the current candidates
        [maxScore, maxIdx] = max(scores);

%         if maxScore > currentBestScore
        score_difs(end+1) = maxScore - currentBestScore;
        %
        figure(490); plot(score_difs,'b','LineWidth',2); hold on; 
        plot(xlim,[thresh,thresh],'r--'); ylim([0 max(score_difs)]); drawnow;
        %
        if (maxScore - currentBestScore) > thresh
            currentBestScore = maxScore;
            selected = [selected, remaining(maxIdx)];
            remaining(maxIdx) = [];

            selectedPredictors = X(:, selected);
            selectedIndices = selected;
            bestModel = models{maxIdx};
        else
            % No improvement, stop
            break;
        end
    end
end


